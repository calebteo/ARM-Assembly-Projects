


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RPN, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E3A00000        MOV              r0, #0      ;r0 = results
    7 00000004 E59F11D0        LDR              r1, =rpnexp ;r1 = address
    8 00000008 E59F31D0        LDR              r3, =0xA1000400 ;Load to addres
                                                            s for stack (curren
                                                            tly using sp) 
    9 0000000C E4D12001        LDRB             r2, [r1], #1 ;r2 = currbit
   10 00000010 E3A04001        MOV              r4, #1
   11 00000014         while
   12 00000014 E3520000        CMP              r2, #0
   13 00000018 0A00006D        BEQ              endProg
   14 0000001C E3520030        CMP              r2, #0x30   ;if r2 > 0
   15 00000020 3A000006        BLO              endif1
   16 00000024 E3520039        CMP              r2, #0x39   ;if r2 < 9
   17 00000028 2A000004        BHS              endif1      ;Bit is between 0 -
                                                             9 ie.number
   18 0000002C E2422030        SUB              r2, #0x30
   19 00000030 EB000014        BL               Num
   20 00000034         ;BL HexToVal
   21 00000034         ;ADD sp, #4
   22 00000034         ;MOV r2, r5    ;Change to Val
   23 00000034 E0833006        ADD              r3, r6
   24 00000038 E5235004        STR              r5, [r3,#-4]!
   25 0000003C EA00000F        B                endif2
   26 00000040         endif1
   27 00000040 E3520020        CMP              r2, #0x20   ;if r2 == space
   28 00000044 0A00001C        BEQ              flipInd
   29 00000048 E352002B        CMP              r2, #0x2B   ;if r2 == '+'
   30 0000004C 0A00001C        BEQ              addFn       ;Go to addFn
   31 00000050 E352002D        CMP              r2, #0x2D   ;if r2 == '-'
   32 00000054 0A000020        BEQ              subFn       ;Go to subFn
   33 00000058 E352002A        CMP              r2, #0x2A   ;if r2 == '*'
   34 0000005C 0A000024        BEQ              mulFn       ;Go to mulFn
   35 00000060 E352002F        CMP              r2, #0x2F   ;if r2 == '/'
   36 00000064 0A000028        BEQ              divFn       ;Go to divFn
   37 00000068 E352005E        CMP              r2, #0x5E   ;if r2 == '^'
   38 0000006C 0A000032        BEQ              powFn       ;Go to powFn
   39 00000070 E352006E        CMP              r2, #0x6E   ;if r2 == 'n'
   40 00000074 0A00004A        BEQ              negFn       ;Go to negFn
   41 00000078 E3520021        CMP              r2, #0x21   ;if r2 == '!'
   42 0000007C 0A00003A        BEQ              facFn       ;Go to facFn
   43 00000080         
   44 00000080         ;ADD sp, r6
   45 00000080         ;STRB r5, [sp,#-4]!  ;Push to Stack
   46 00000080         endif2
   47 00000080 E4D12001        LDRB             r2, [r1], #1 ;Load next bit
   48 00000084 EAFFFFE2        B                while
   49 00000088         
   50 00000088         Num
   51 00000088 E3540000        CMP              r4, #0
   52 0000008C 1A000006        BNE              return
   53 00000090 E5938000        LDR              r8, [r3]
   54 00000094 E3A0700A        MOV              r7, #0xA
   55 00000098 E0080897        MUL              r8, r7, r8
   56 0000009C E0885002        ADD              r5, r8, r2



ARM Macro Assembler    Page 2 


   57 000000A0 E3A04000        LDR              r4, =0
   58 000000A4 E3A06004        LDR              r6, =4
   59 000000A8 E12FFF1E        BX               lr
   60 000000AC         return
   61 000000AC E3A04000        LDR              r4, =0
   62 000000B0 E3A06000        LDR              r6, =0
   63 000000B4 E1A05002        MOV              r5, r2
   64 000000B8 E12FFF1E        BX               lr
   65 000000BC         
   66 000000BC         flipInd
   67 000000BC E3A04001        MOV              r4, #1      ;1 = prev was space
                                                             // 0 = prev was nu
                                                            m/op
   68 000000C0 EAFFFFEE        B                endif2
   69 000000C4         
   70 000000C4         addFn
   71 000000C4 E9234017        STMFD            r3!, {r0-r2,r4, lr}
   72 000000C8 E5930018        LDR              r0, [r3, #4+20]
   73 000000CC E5931014        LDR              r1, [r3, #20]
   74 000000D0 E0815000        ADD              r5, r1, r0
   75 000000D4 E3A06008        LDR              r6, =8
   76 000000D8 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
   77 000000DC         
   78 000000DC         subFn
   79 000000DC E9234017        STMFD            r3!, {r0-r2,r4, lr}
   80 000000E0 E5930018        LDR              r0, [r3, #4+20]
   81 000000E4 E5931014        LDR              r1, [r3, #20]
   82 000000E8 E0405001        SUB              r5, r0, r1
   83 000000EC E3A06008        LDR              r6, =8
   84 000000F0 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
   85 000000F4         
   86 000000F4         mulFn
   87 000000F4 E9234017        STMFD            r3!, {r0-r2,r4, lr}
   88 000000F8 E5930018        LDR              r0, [r3, #4+20]
   89 000000FC E5931014        LDR              r1, [r3, #20]
   90 00000100 E0050091        MUL              r5, r1, r0
   91 00000104 E3A06008        LDR              r6, =8
   92 00000108 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
   93 0000010C         
   94 0000010C         divFn
   95 0000010C E9234017        STMFD            r3!, {r0-r2, r4,lr}
   96 00000110 E5930018        LDR              r0, [r3, #4+20]
   97 00000114 E5931014        LDR              r1, [r3, #20]
   98 00000118 E3A05000        LDR              r5, =0      ;counter
   99 0000011C E0400001        SUB              r0, r0, r1
  100 00000120         while4
  101 00000120 E3500000        CMP              r0, #0x0
  102 00000124 BA000002        BLT              endwhile4
  103 00000128 E2855001        ADD              r5, r5, #0x1
  104 0000012C E0400001        SUB              r0, r0, r1
  105 00000130 EAFFFFFA        B                while4
  106 00000134         endwhile4
  107 00000134 E3A06008        LDR              r6, =8
  108 00000138 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
  109 0000013C         
  110 0000013C         powFn
  111 0000013C E9234017        STMFD            r3!, {r0-r2,r4, lr}
  112 00000140 E5930018        LDR              r0, [r3, #4+20]
  113 00000144 E5931014        LDR              r1, [r3, #20]



ARM Macro Assembler    Page 3 


  114 00000148 E3A02000        LDR              r2, =0      ;counter
  115 0000014C E3A05001        LDR              r5, =1
  116 00000150         while2
  117 00000150 E1520001        CMP              r2, r1
  118 00000154 2A000002        BHS              endwhile2
  119 00000158 E0050590        MUL              r5, r0, r5
  120 0000015C E2822001        ADD              r2, r2, #0x1
  121 00000160 EAFFFFFA        B                while2
  122 00000164         endwhile2
  123 00000164 E3A06008        LDR              r6, =8
  124 00000168 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
  125 0000016C         
  126 0000016C         facFn
  127 0000016C E9234017        STMFD            r3!, {r0-r2,r4, lr}
  128 00000170 E5930014        LDR              r0, [r3, #20]
  129 00000174 E3A05001        LDR              r5, =1      ;result
  130 00000178 E3500000        CMP              r0, #0x0
  131 0000017C 0A000005        BEQ              endwhile3
  132 00000180 E3A01001        LDR              r1, =1      ;counter
  133 00000184         while3
  134 00000184 E1500001        CMP              r0, r1
  135 00000188 9A000002        BLS              endwhile3
  136 0000018C E0050591        MUL              r5, r1, r5
  137 00000190 E2811001        ADD              r1, r1, #0x1
  138 00000194 EAFFFFFA        B                while3
  139 00000198         endwhile3
  140 00000198 E0050591        MUL              r5, r1, r5
  141 0000019C E3A06004        LDR              r6, =4
  142 000001A0 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
  143 000001A4         
  144 000001A4         negFn
  145 000001A4 E9234017        STMFD            r3!, {r0-r2,r4, lr}
  146 000001A8 E5930014        LDR              r0, [r3, #20]
  147 000001AC E3E01000        MOV              r1, #0xFFFFFFFF
  148 000001B0 E0200001        EOR              r0, r0, r1
  149 000001B4 E2805001        ADD              r5, r0, #0x1
  150 000001B8 E3A06004        LDR              r6, =4
  151 000001BC E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
  152 000001C0         
  153 000001C0         HexToVal
  154 000001C0 E9234017        STMFD            r3!, {r0-r2,r4, lr}
  155 000001C4 E5930008        LDR              r0, [r3, #8]
  156 000001C8 E2405030        SUB              r5, r0, #0x30
  157 000001CC E3A06000        LDR              r6, =0
  158 000001D0 E8B38017        LDMFD            r3!, {r0-r2,r4, pc}
  159 000001D4         
  160 000001D4         endProg
  161 000001D4 E4930004        LDR              r0, [r3], #4 ;Pop value from St
                                                            ack to result
  162 000001D8 EAFFFFFE 
                       stop    B                stop
  163 000001DC         
  164 000001DC 00000000 
              A1000400         AREA             ReversePolish, DATA, READWRITE
  165 00000000 31 32 33 
              20 31 30 
              20 2F 20 
              00       rpnexp  DCB              "123 10 / ",0
  166 0000000A                 END



ARM Macro Assembler    Page 4 


Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\f
irstprogram.d -o.\firstprogram.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 523" --predefine="NO_C
LOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SE
TA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\firstpr
ogram.lst FirstProgram.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HexToVal 000001C0

Symbol: HexToVal
   Definitions
      At line 153 in file FirstProgram.s
   Uses
      None
Comment: HexToVal unused
Num 00000088

Symbol: Num
   Definitions
      At line 50 in file FirstProgram.s
   Uses
      At line 19 in file FirstProgram.s
Comment: Num used once
RPN 00000000

Symbol: RPN
   Definitions
      At line 1 in file FirstProgram.s
   Uses
      None
Comment: RPN unused
addFn 000000C4

Symbol: addFn
   Definitions
      At line 70 in file FirstProgram.s
   Uses
      At line 30 in file FirstProgram.s
Comment: addFn used once
divFn 0000010C

Symbol: divFn
   Definitions
      At line 94 in file FirstProgram.s
   Uses
      At line 36 in file FirstProgram.s
Comment: divFn used once
endProg 000001D4

Symbol: endProg
   Definitions
      At line 160 in file FirstProgram.s
   Uses
      At line 13 in file FirstProgram.s
Comment: endProg used once
endif1 00000040

Symbol: endif1
   Definitions
      At line 26 in file FirstProgram.s
   Uses
      At line 15 in file FirstProgram.s
      At line 17 in file FirstProgram.s

endif2 00000080




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: endif2
   Definitions
      At line 46 in file FirstProgram.s
   Uses
      At line 25 in file FirstProgram.s
      At line 68 in file FirstProgram.s

endwhile2 00000164

Symbol: endwhile2
   Definitions
      At line 122 in file FirstProgram.s
   Uses
      At line 118 in file FirstProgram.s
Comment: endwhile2 used once
endwhile3 00000198

Symbol: endwhile3
   Definitions
      At line 139 in file FirstProgram.s
   Uses
      At line 131 in file FirstProgram.s
      At line 135 in file FirstProgram.s

endwhile4 00000134

Symbol: endwhile4
   Definitions
      At line 106 in file FirstProgram.s
   Uses
      At line 102 in file FirstProgram.s
Comment: endwhile4 used once
facFn 0000016C

Symbol: facFn
   Definitions
      At line 126 in file FirstProgram.s
   Uses
      At line 42 in file FirstProgram.s
Comment: facFn used once
flipInd 000000BC

Symbol: flipInd
   Definitions
      At line 66 in file FirstProgram.s
   Uses
      At line 28 in file FirstProgram.s
Comment: flipInd used once
mulFn 000000F4

Symbol: mulFn
   Definitions
      At line 86 in file FirstProgram.s
   Uses
      At line 34 in file FirstProgram.s
Comment: mulFn used once
negFn 000001A4

Symbol: negFn



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 144 in file FirstProgram.s
   Uses
      At line 40 in file FirstProgram.s
Comment: negFn used once
powFn 0000013C

Symbol: powFn
   Definitions
      At line 110 in file FirstProgram.s
   Uses
      At line 38 in file FirstProgram.s
Comment: powFn used once
return 000000AC

Symbol: return
   Definitions
      At line 60 in file FirstProgram.s
   Uses
      At line 52 in file FirstProgram.s
Comment: return used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file FirstProgram.s
   Uses
      At line 3 in file FirstProgram.s
Comment: start used once
stop 000001D8

Symbol: stop
   Definitions
      At line 162 in file FirstProgram.s
   Uses
      At line 162 in file FirstProgram.s
Comment: stop used once
subFn 000000DC

Symbol: subFn
   Definitions
      At line 78 in file FirstProgram.s
   Uses
      At line 32 in file FirstProgram.s
Comment: subFn used once
while 00000014

Symbol: while
   Definitions
      At line 11 in file FirstProgram.s
   Uses
      At line 48 in file FirstProgram.s
Comment: while used once
while2 00000150

Symbol: while2
   Definitions
      At line 116 in file FirstProgram.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 121 in file FirstProgram.s
Comment: while2 used once
while3 00000184

Symbol: while3
   Definitions
      At line 133 in file FirstProgram.s
   Uses
      At line 138 in file FirstProgram.s
Comment: while3 used once
while4 00000120

Symbol: while4
   Definitions
      At line 100 in file FirstProgram.s
   Uses
      At line 105 in file FirstProgram.s
Comment: while4 used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ReversePolish 00000000

Symbol: ReversePolish
   Definitions
      At line 164 in file FirstProgram.s
   Uses
      None
Comment: ReversePolish unused
rpnexp 00000000

Symbol: rpnexp
   Definitions
      At line 165 in file FirstProgram.s
   Uses
      At line 7 in file FirstProgram.s
Comment: rpnexp used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file FirstProgram.s
   Uses
      None
Comment: main unused
1 symbol
367 symbols in table
